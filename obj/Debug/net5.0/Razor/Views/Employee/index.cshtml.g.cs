#pragma checksum "C:\Users\max_w\Desktop\projectpayroll\Views\Employee\index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5f0dc0a740291a4722b32dd38c247220defb8fe9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Employee_index), @"mvc.1.0.view", @"/Views/Employee/index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\max_w\Desktop\projectpayroll\Views\_ViewImports.cshtml"
using projectpayroll;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\max_w\Desktop\projectpayroll\Views\_ViewImports.cshtml"
using projectpayroll.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5f0dc0a740291a4722b32dd38c247220defb8fe9", @"/Views/Employee/index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"55231f8b2935cf16ee23a3deb1ef016831686df2", @"/Views/_ViewImports.cshtml")]
    public class Views_Employee_index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<div id='app1' v-cloak >
    <v-app style=""background-color:#EDF1F2;""> 
        <v-main>
            <v-card>
            <v-navigation-drawer
                    permanent
                    :mini-variant.sync=""mini""
                    fixed
                    app
                    style=""background-color:#002952""
                    >
                    <v-list
                    nav
                    dense
                    >
                    <v-btn
                    icon
                    ");
            WriteLiteral("@click.stop=\"mini = !mini\"\n                    >\n                    <v-icon style=\"color:white\">mdi-chevron-left</v-icon>\n                    </v-btn>\n                    <v-list-item ");
            WriteLiteral(@"@click='all_info' >
                        <v-list-item-icon>
                        <v-icon style=""color:white"">mdi-view-list</v-icon>
                        </v-list-item-icon>
                        <v-list-item-title  class=""navm"">ALL EMPLOYEES</v-list-item-title>
                    </v-list-item>
                    <v-list-item ");
            WriteLiteral(@"@click='add_page'>
                        <v-list-item-icon>
                        <v-icon style=""color:white"">mdi-account-multiple-plus</v-icon>
                        </v-list-item-icon>
                        <v-list-item-title  class=""navm"">NEW EMPLOYEE</v-list-item-title>
                    </v-list-item>
                    <v-list-item ");
            WriteLiteral(@"@click='import_emp'>
                        <v-list-item-icon>
                        <v-icon style=""color:white"">mdi-file-import</v-icon>
                        </v-list-item-icon>
                        <v-list-item-title  class=""navm"">IMPORT</v-list-item-title>
                    </v-list-item>

                    <!---list group--->
                    <v-list-group
                    prepend-icon=""mdi-settings"" 
                    >
                    <v-list-item slot=""activator"" >
                        <v-list-item-title  class=""navm"">SETTING</v-list-item-title>
                    </v-list-item>

                      <v-list-group
                            sub-group
                            no-action
                        >
                            <v-list-item slot=""activator"">
                            <v-list-item-title  class=""navm"">DEPARTMENTS</v-list-item-title>
                            </v-list-item>
                            <v-list-item ");
            WriteLiteral("@click=\'dep_page\'>\n                                <v-list-item-title  class=\"navm\">ALL DEPARTMENTS</v-list-item-title>\n                            </v-list-item>\n                            <v-list-item ");
            WriteLiteral(@"@click='dep_add_page'>
                                <v-list-item-title  class=""navm"">NEW DEPARTMENT</v-list-item-title>
                            </v-list-item>
                        </v-list-group>

                         <v-list-group
                            sub-group
                            no-action
                        >
                            <v-list-item slot=""activator"">
                            <v-list-item-title  class=""navm"">BANK</v-list-item-title>
                            </v-list-item>
                            <v-list-item ");
            WriteLiteral("@click=\'bank_page\'>\n                                <v-list-item-title  class=\"navm\">ALL BANKS</v-list-item-title>\n                            </v-list-item>\n                            <v-list-item ");
            WriteLiteral(@"@click='bank_add_page' >
                                <v-list-item-title  class=""navm"">NEW BANK</v-list-item-title>                 
                            </v-list-item>
                        </v-list-group>

                        </v-list-group>
                </v-navigation-drawer>
                </v-card>	

            <div class=""size"">         
            <h3 style=""text-align:center"">EMPLOYEE INFORMATION</h3>
    
            <hr>
            <br>
            <v-row>
            <v-col cols=""12"">
            <v-card class=""ma-2"">
                    <v-card-title class=""dark--text"" style=""background-color:#001f3d;"">
                        <h3 style=""text-align: center; color:white"">Employees By Department</h3>
                    </v-card-title>
                    <v-card-text style=""background-color:White"">
                    <v-chart :options=""plot"" style=""width: 100%; height: 500px; ""/>
                    </v-card-text>
                </v-card>
            </v-col>
          </v-");
            WriteLiteral(@"row>
          
           <br>
           <v-card-title class=""white--text"" style=""background-color:#001f3d;"">
                        <h3 style=""text-align: center"">Employee List</h3>
                    </v-card-title>
             <v-data-table
             :headers ='headers'
             :items   ='employees'
              class='elevation-1'
             />
                
                <template v-slot:item.names='{item}'>
                        <td
                        ");
            WriteLiteral(@"@click=""edit_employee(item)""
                        >
                        {{item.employeeName}}  
                        </td >
                </template>
             </v-data-table>
         </div>
     
        </v-main>
    </v-app>
</div>
<style>
.navm{
    color:white;
}
.size{
    margin:20px;
}
  .v-text-field{
    font-size:20px;
  }
</style>
");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        Vue.component('v-chart', VueECharts);
        var app;
            var component = {
                vuetify: new Vuetify()
                ,
                el:'#app1'
                ,
                data:{
              
                   employees:[]
                   ,
                   headers:[

                      {text:'EMPLOYEE NAME',value:'names',align:'left',sortable:true},
                      {text:'POSITION',value:'position',align:'left',sortable:true},
                      {text:'DEPARTMENT',value:'departmentName',align:'left',sortable:true},
                      {text:'PHONE',value:'phone',align:'left',sortable:true},
                      {text:'EMAIL',value:'email',align:'left',sortable:true},
                      

					]
                    ,
                    plot: {
                        toolbox: {
                            show: true,
                            left: '90%',
                            feature: {

                                re");
                WriteLiteral(@"store: {
                                    show: true,
                                    title: 'restore',
                                    
                                },
                                saveAsImage: {
                                    show: true,
                                    title: 'save image'
                                },
                                
                            }
                        },
                        title: {
                            text: 'The Pure Water & Ice Company Limited',
                            subtext:'Employees Categorize By Department',
                             left: 'center',
                            
                        },
                        
                        tooltip: {},
                        legend: {
                            data: ['Employees'],
                            
                           
                            
                        },
                        
");
                WriteLiteral(@"                        xAxis: {
                            data: [],
                            
                            axisLabel: {
                                textStyle: {
                                    color: '#4b2c20',
                                }
                            },
                    
                            axisTick: {
                                show: false
                                 
                            },
                            axisLine: {
                                show: false,
                               
                            },
                            z: 10
                            
                        },
                        yAxis: [
                            {
                                type: 'value',
                              
                               
                            }
                        ]
                    }
                    ,
                    mini:true

       ");
                WriteLiteral(@"         }//edata
                ,
                created(){
                    $.get('/employee/report1').done(res => {
                    console.log(res);
                    this.plot.xAxis.data = res.x_data;
                    this.plot.series=[{
                            name: 'value',
                            type: 'bar',
                            label: {
                show: true,
                position: 'top'
            },
                            data: res.y_data,
                            itemStyle: { color: '#8C001A'
                            }
                        },
                       
                        ];
                    console.log(this.plot);
                        
           });
                  this.employees = ");
#nullable restore
#line 246 "C:\Users\max_w\Desktop\projectpayroll\Views\Employee\index.cshtml"
                              Write(Html.Raw(Json.Serialize(@ViewBag.employees)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
                  console.log(this.employees)

                }//ecreated
                ,
                methods:{
                    add_page(){
                        window.location= '/employee/add';     
                    }//ef
                    ,
                    all_info(){
                        window.location ='/employee/index';
                    }//ef
                    ,
                   
                    import_emp(){
                        window.location='/employee/importview';
                    }
                    ,
                    dep_page(){
                        window.location='/department/index'
                    }
                    ,
                    dep_add_page(){
                        window.location='/department/add'
                    }
                    ,
                    bank_page(){
                        window.location='/bank/index'
                    }
                    ,
                    bank_add_page(){
                ");
                WriteLiteral(@"        window.location='/bank/add'
                    }
                    ,
                    edit_employee(item){
                        window.location = '/employee/edit/'+item.employeeId;
                    }

                }//emethods
                ,
                computed:{

                }//ecomputed
            };
            app = new Vue(component);


    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
