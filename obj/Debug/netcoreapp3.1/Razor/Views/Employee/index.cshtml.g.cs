#pragma checksum "C:\Users\max_w\Desktop\projectpayroll\Views\Employee\index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cd34c0a61aab6c43c21a7c4c4296ae293b7d87f0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Employee_index), @"mvc.1.0.view", @"/Views/Employee/index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\max_w\Desktop\projectpayroll\Views\_ViewImports.cshtml"
using projectpayroll;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\max_w\Desktop\projectpayroll\Views\_ViewImports.cshtml"
using projectpayroll.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cd34c0a61aab6c43c21a7c4c4296ae293b7d87f0", @"/Views/Employee/index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"55231f8b2935cf16ee23a3deb1ef016831686df2", @"/Views/_ViewImports.cshtml")]
    public class Views_Employee_index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n<div id=\'app1\' v-cloak>\n\n    <v-app>\n        <v-main>\n            <v-row>\n                <v-btn\n              ");
            WriteLiteral(@"@click='add_employee'
             >
                New Employee
                 
             </v-btn>
            <v-col cols=""12"">
            <v-card class=""ma-2"">
                    <v-card-title class=""primary white--text"">
                        <h3 style=""text-align: center"">Employees By Department</h3>
                    </v-card-title>
                    <v-card-text>
                    <v-chart :options=""plot"" style=""width: 100%; height: 500px;""/>
                    </v-card-text>
                </v-card>
            </v-col>
          </v-row>

             <v-data-table
             :headers ='headers'
             :items   ='employees'
              class='elevation-1'
             />

                <template v-slot:item.names='{item}'>
                        <td
                        ");
            WriteLiteral(@"@click=""edit_employee(item)""
                        
                        >
                        {{item.employeeName}}
                            
                        </td >
                </template>
             </v-data-table>
        </v-main>
    </v-app>
</div>
<style>

</style>
");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        Vue.component('v-chart', VueECharts);
        var app;
            var component = {
                vuetify: new Vuetify()
                ,
                el:'#app1'
                ,
                data:{
              
                   employees:[]
                   ,
                   headers:[

                      {text:'Employee Name',value:'names',align:'left',sortable:true},
                      {text:'Position',value:'position',align:'left',sortable:true},
                      {text:'Department Name',value:'departmentName',align:'left',sortable:true},
                      {text:'Phone',value:'phone',align:'left',sortable:true},
                      {text:'Email',value:'email',align:'left',sortable:true},
                      

					]
                    ,
                    plot: {
                        toolbox: {
                            show: true,
                            feature: {
                                dataView: {
                           ");
                WriteLiteral(@"         show: true,
                                    readOnly: false,
                                    title: 'Data View'
                                },
                                magicType: {
                                    show: true,
                                    type: ['line', 'bar'],
                                    title: {
                                        line: ""Line"",
                                        bar: ""Bar"",
                                    }
                    
                                },
                                restore: {
                                    show: true,
                                    title: 'restore'
                                },
                                saveAsImage: {
                                    show: true,
                                    title: 'save image'
                                }
                            }
                        },
                        title: {
         ");
                WriteLiteral(@"                   text: 'Employees',
                        },
                        tooltip: {},
                        legend: {
                            data: ['Employees'],
                        },
                        xAxis: {
                            data: [],
                            axisLabel: {
                                
                                textStyle: {
                                    color: '#4b2c20'
                                }
                            },
                    
                            axisTick: {
                                show: false
                            },
                            axisLine: {
                                show: false
                            },
                            z: 10
                        },
                        yAxis: [
                            {
                                type: 'value'
                            }
                        ]
                    }
     ");
                WriteLiteral(@"           }//edata
                ,
                created(){
                    $.get('/employee/report1').done(res => {
                    console.log(res);
                    this.plot.xAxis.data = res.x_data;
                    this.plot.series=[{
                            name: 'value',
                            type: 'bar',
                            data: res.y_data,
                            itemStyle: { color: '#81d4fa'
                            }
                        }];
                    console.log(this.plot);
                        
           });
                  this.employees = ");
#nullable restore
#line 145 "C:\Users\max_w\Desktop\projectpayroll\Views\Employee\index.cshtml"
                              Write(Html.Raw(Json.Serialize(@ViewBag.employees)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
                  console.log(this.employees)

                }//ecreated
                ,
                methods:{
                    add_employee(){
                        window.location= '/employee/add';
                  
                        
                    }//ef
                    
                    ,
                    edit_employee(item){
                        window.location = '/employee/edit/'+item.employeeId;
                    }

                }//emethods
                ,
                computed:{

                }//ecomputed
            };
            app = new Vue(component);


    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
