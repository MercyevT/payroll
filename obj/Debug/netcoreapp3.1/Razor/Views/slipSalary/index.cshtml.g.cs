#pragma checksum "C:\Users\max_w\Desktop\projectpayroll\Views\slipSalary\index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "55fe4ea6f1dcc768120540515ec31c0187132ad6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_slipSalary_index), @"mvc.1.0.view", @"/Views/slipSalary/index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\max_w\Desktop\projectpayroll\Views\_ViewImports.cshtml"
using projectpayroll;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\max_w\Desktop\projectpayroll\Views\_ViewImports.cshtml"
using projectpayroll.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"55fe4ea6f1dcc768120540515ec31c0187132ad6", @"/Views/slipSalary/index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"55231f8b2935cf16ee23a3deb1ef016831686df2", @"/Views/_ViewImports.cshtml")]
    public class Views_slipSalary_index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<nav aria-label=""breadcrumb"">
    <ol class=""breadcrumb breadcrumb-arrow"">
        <li class=""breadcrumb-item active"" aria-current=""page"">slipSalary</li>
    </ol>
</nav>
<div id='app1' v-cloak>
    <v-app>
        <v-main>
             
             <v-data-table
             :headers ='headers'
             :items   ='slipSalarys'
              class='elevation-1'
             />
                  <template v-slot:item.actions='{item}'>
                        <v-btn 
                        class=""white--text""
                        color=""blue darken-1""
                        ");
            WriteLiteral("@click=\"detail_slip(item)\"\n                        >\n                            datail\n                            \n                        </v-btn>\n                </template>\n             </v-data-table>\n        </v-main>\n    </v-app>\n\n</div>\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        var app;
            var component = {
                vuetify: new Vuetify()
                ,
                el:'#app1'
                ,
                data:{
                    
                   slipSalarys:[],tax:[],salary:[],ot:[],ssf:[],employee:[],all:[],slipMaster:[],earning:[],deduction:[],totalearn:[],totaldeduct:[],slip:[],et:[]
                   ,
                   headers:[
                      {text:'employeeName',value:'employeeName',align:'center',sortable:true},
                      {text:'Totalearning',value:'Totalearning',align:'center',sortable:true},
                      {text:'totaldeducttion',value:'totaldeducttion',align:'center',sortable:true},
                      {text:'NetSalary',value:'NetSalary',align:'center',sortable:true},
                      {text:'Slip datail',value:'actions',align:'center',sortable:true},

					],
                    
                    
                }//edata
                ,
                created(){
              ");
                WriteLiteral("    this.slipSalarys = ");
#nullable restore
#line 55 "C:\Users\max_w\Desktop\projectpayroll\Views\slipSalary\index.cshtml"
                                Write(Html.Raw(Json.Serialize(@ViewBag.slipSalarys)));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\n                  this.ot  = ");
#nullable restore
#line 56 "C:\Users\max_w\Desktop\projectpayroll\Views\slipSalary\index.cshtml"
                        Write(Html.Raw(Json.Serialize(@ViewBag.OTCs)));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\n                  this.tax  = ");
#nullable restore
#line 57 "C:\Users\max_w\Desktop\projectpayroll\Views\slipSalary\index.cshtml"
                         Write(Html.Raw(Json.Serialize(@ViewBag.taxs)));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\n                  this.salary  = ");
#nullable restore
#line 58 "C:\Users\max_w\Desktop\projectpayroll\Views\slipSalary\index.cshtml"
                            Write(Html.Raw(Json.Serialize(@ViewBag.CurrentSalarys)));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\n                  this.ssf  = ");
#nullable restore
#line 59 "C:\Users\max_w\Desktop\projectpayroll\Views\slipSalary\index.cshtml"
                         Write(Html.Raw(Json.Serialize(@ViewBag.ssfunds)));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\n                  this.employee  = ");
#nullable restore
#line 60 "C:\Users\max_w\Desktop\projectpayroll\Views\slipSalary\index.cshtml"
                              Write(Html.Raw(Json.Serialize(@ViewBag.employee)));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\n                  this.slipMaster = ");
#nullable restore
#line 61 "C:\Users\max_w\Desktop\projectpayroll\Views\slipSalary\index.cshtml"
                               Write(Html.Raw(Json.Serialize(@ViewBag.slipMasters)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
              
                  for(i=0;i<this.employee.length;i++){this.all.push(this.tax[i],this.salary[i],this.ssf[i])}
                  for(i=0;i<this.ot.length;i++){this.all.push(this.ot[i])}
                  
                  
                  for(i=0;i<this.all.length;i++){
                      for(a=0;a<this.slipMaster.length;a++){
                        if(this.all[i].slipMasterId==this.slipMaster[a].slipMasterId){
                            if(this.slipMaster[a].slipMasterType==1){
                                this.earning.push(this.all[i])
                            }
                            else{
                                this.deduction.push(this.all[i])
                            }
                        }
                      }
                  }
                  for(i=0;i<this.employee.length;i++){
                      var totalvalue=0;
                      var totalvalue2=0;
                      for(a=0;a<this.earning.filter(x=>x.employeeId==this.employee[i].emp");
                WriteLiteral(@"loyeeId).length;a++){
                          totalvalue = this.earning.filter(x=>x.employeeId==this.employee[i].employeeId)[a].value+totalvalue
                      }
                      for(b=0;b<this.deduction.filter(x=>x.employeeId==this.employee[i].employeeId).length;b++){
                          totalvalue2 = this.deduction.filter(x=>x.employeeId==this.employee[i].employeeId)[b].value+totalvalue2
                      }
                      this.totalearn.push(totalvalue)
                      this.totaldeduct.push(totalvalue2)
                  }
                  for(i=0;i<this.employee.length;i++){
                      for(a=0;a<this.earning.filter(x=>x.employeeId==this.employee[i].employeeId).length;a++){
                          this.earning.filter(x=>x.employeeId==this.employee[i].employeeId)[a].slipMasterId = 
                         this.slipMaster.filter(x=>x.slipMasterId==this.earning.filter(x=>x.employeeId==this.employee[i].employeeId)[a].slipMasterId)[0].slipMasterName
           ");
                WriteLiteral(@"           }
                      var p={
                          employeeName   : this.employee[i].firstName+"" ""+this.employee[i].lastName,
                          earnT          : this.earning.filter(x=>x.employeeId==this.employee[i].employeeId)

                      }
                      this.slip.push(p)
                  }
                  for(i=0;i<this.employee.length;i++){
                      var p = {
                          employeeId            : this.employee[i].employeeId,
                          employeeName          : this.employee[i].firstName+"" ""+this.employee[i].lastName,
                          Totalearning          : this.totalearn[i],
                          totaldeducttion       : this.totaldeduct[i],
                          NetSalary             : this.totalearn[i]-this.totaldeduct[i],
                          
                      }
                      this.slipSalarys.push(p)
                  }
                  console.log(this.slipSalarys)
                 ");
                WriteLiteral(@" 
                  
                }//ecreated
                ,
                methods:{
                    add_slipsalary(){
                        window.location= '/slipsalary/add';
                    }//ef
                    
                    ,
                    
                    detail_slip(item){
                        window.location = '/slipsalary/slip2/'+item.employeeId;
                    }

                }//emethods
                ,
                computed:{

                }//ecomputed
            };
            app = new Vue(component);


    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
